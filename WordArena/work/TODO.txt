WordArena
¯¯¯¯¯¯¯¯¯
[ ] Faire les dispose() dans Assets, les overlays...
[ ] Avoir un visuel différent par types de cellule
[ ] Gérer la vie d'une partie :
	- 1 partie = 2 rounds gagnants. Le premier joueur a jouer change à chaque round
	- 1 round = 10 tours. Nouvelles lettres à chaque round.
	- 1 tour = 1 coup par joueur
	- Détection de la fin de partie (si un joueur n'a plus de zone, il perd)

Ashley
¯¯¯¯¯¯
Trouver un moyen de mixer UI et rendering normal : p-e avec un Stage superposé aux coordonnées du monde réel ? Mais alors on a 2 couches, donc pas un vrai mix... :s

GameParts
¯¯¯¯¯¯¯¯¯
[ ] Ajouter les composants :
	[ ] UI
	[ ] ShapeRendererPart
	[ ] PoolPart : gère un pool d'instances d'un certain GameObject
	[ ] Colliders
	[ ] DragComponent (avec un payload), DropTargetComponent DragAndDropScript
	[ ] Tween
	[ ] Body et autres Box2d (https://github.com/libgdx/libgdx/wiki/box2d)
	[ ] Lumière
[ ] Configuration d'un Component (variables publiques) à partir d'un fichier JSON
	-> Ajouter une méthode load(JSonValue) qui initialise le Component par réflexion
	-> Ajouter une méthode JSonValue save() qui enregistre le Component par réflexion

Champ de bataille
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
[ ] Gérer la fin de partie (affichage popup, retour à la carte du monde)
[ ] Images des unités : 8 directions, pour plus de précision et de réalisme
[ ] Générer une carte aléatoire à partir de paramètres (nombre d'ennemis, nombre de sorties du château, nombre d'avant-postes...)

Combat
¯¯¯¯¯¯
[ ] Afficher des barres de vie pour les unités
Monde
¯¯¯¯¯

Gestion des unités
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
[ ] Prévoir un countdown avant qu'une unité puisse être de nouveau invoquée
[ ] Gérer la somme d'argent utilisée par le joueur pour invoquer des unités 
[ ] Prévoir un nombre maximum d'unités de chaque type invocable (défini dans le properties de la mission)